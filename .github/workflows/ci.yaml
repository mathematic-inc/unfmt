name: Continuous integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  merge_group:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checks:
    name: Check code
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@43045ae669be728bd34ed56fcd1a230c0dc4d8e2
      - name: Set up Rust
        run: rustup default nightly
      - name: Install development tools
        uses: taiki-e/install-action@6261d093c5f01aa48722a4640a5b00a02a358aac
        with:
          tool: cargo-deny@0.14.21, cargo-udeps@0.1.47
      - name: Install Rust linters
        run: rustup component add clippy rustfmt
      - name: Run checks
        run: |
          cargo fmt --check
          cargo clippy --locked --all-features -- -D warnings
          cargo deny check
          cargo udeps
  tests:
    name: Test on ${{ matrix.os.name }} (${{ matrix.channel }})
    runs-on: ${{ matrix.os.value }}
    strategy:
      matrix:
        os:
          - name: Linux
            value: ubuntu-latest
          - name: Windows
            value: windows-latest
          - name: macOS
            value: macos-latest
        channel:
          - stable
          - beta
          - nightly
    steps:
      - name: Check out repository
        uses: actions/checkout@43045ae669be728bd34ed56fcd1a230c0dc4d8e2
      - name: Set up Rust
        run: rustup default ${{ matrix.channel }}
      - name: Run tests
        run: cargo test --locked
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@43045ae669be728bd34ed56fcd1a230c0dc4d8e2
      - name: Set up Rust
        run: rustup default nightly
      - name: Install development tools
        uses: taiki-e/install-action@6261d093c5f01aa48722a4640a5b00a02a358aac
        with:
          tool: cargo-llvm-cov@0.6.9
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --branch --fail-under-lines 85 --lcov --output-path target/lcov.info
      - name: Upload code coverage
        uses: romeovs/lcov-reporter-action@4cf015aa4afa87b78238301f1e3dc140ea0e1ec6
        if: github.event_name == 'pull_request'
        with:
          lcov-file: ./target/lcov.info
          delete-old-comments: true
  success:
    name: Success
    needs: [checks, tests, coverage]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - if: needs.checks.result != 'success' || needs.tests.result != 'success' || needs.coverage.result != 'success'
        run: exit 1
      - run: exit 0
